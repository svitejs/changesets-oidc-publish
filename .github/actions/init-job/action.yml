name: 'setup'
description: 'composite for shared job setup'
inputs:
  allowed-endpoints:
    description: 'allowed outbound connections'
    required: true
    default: >
      api.github.com:443
      github.com:443
      nodejs.org:443
      release-assets.githubusercontent.com:443
      objects.githubusercontent.com:443
      registry.npmjs.org:443
  node-version:
    description: 'node version'
    required: true
    default: '24'
  install-deps:
    description: 'install deps'
    required: true
    default: 'true'

runs:
  using: composite
  steps:
    - name: Harden the runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: block
        allowed-endpoints: ${{inputs.allowed-endpoints}}
    # the following 2 steps are a replacement for pnpms own setup action that contains a lot of code
    - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      with:
        node-version: ${{inputs.node-version}}
        package-manager-cache: false
    - name: install pnpm
      shell: bash
      run: |
        PNPM_VER=$(jq -r '.packageManager | if .[0:5] == "pnpm@" then .[5:] else "packageManager in package.json does not start with pnpm@\n" | halt_error(1)  end' package.json)
        echo installing pnpm version $PNPM_VER
        npm i --ignore-scripts -g pnpm@$PNPM_VER
    - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      if: ${{inputs.install-deps == 'true'}}
      with:
        node-version: ${{inputs.node-version}}
        package-manager-cache: true
    - name: install dependencies
      if: ${{inputs.install-deps == 'true'}}
      shell: bash
      run: pnpm install --frozen-lockfile --ignore-scripts
